import{_ as i,M as l,p,q as o,R as n,t as a,N as e,a1 as t}from"./framework-c4f3d865.js";const r="/assets/image-20230703170241025-8514600f.png",c="/assets/image-20230703175219446-f3467da9.png",d={},u=n("h1",{id:"deployment-guide",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#deployment-guide","aria-hidden":"true"},"#"),a(" Deployment Guide")],-1),h={href:"https://sfx.antio2.cn/script",target:"_blank",rel:"noopener noreferrer"},v=n("h2",{id:"download",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#download","aria-hidden":"true"},"#"),a(" Download")],-1),m=n("h3",{id:"选项1-通过源码获取",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#选项1-通过源码获取","aria-hidden":"true"},"#"),a(" 选项1：通过源码获取")],-1),k=n("thead",null,[n("tr",null,[n("th",null,"仓库"),n("th",null,"说明")])],-1),b={href:"https://github.com/SmartFinanceX/sfx-backend",target:"_blank",rel:"noopener noreferrer"},g=n("td",null,"后端仓库",-1),f={href:"https://github.com/SmartFinanceX/sfx-frontend",target:"_blank",rel:"noopener noreferrer"},_=n("td",null,"前端仓库",-1),x=n("p",null,"通过下载源码，获取软件",-1),w=n("h3",{id:"选项2-下载编译文件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#选项2-下载编译文件","aria-hidden":"true"},"#"),a(" 选项2：下载编译文件")],-1),y=n("p",null,"通过访问Release页面，下载已经编译完成的文件。",-1),E=n("thead",null,[n("tr",null,[n("th",null,"发布页"),n("th",null,"说明")])],-1),S={href:"https://github.com/SmartFinanceX/sfx-backend/releases",target:"_blank",rel:"noopener noreferrer"},R=n("td",null,"后端发布页",-1),A={href:"https://github.com/SmartFinanceX/sfx-frontend/releases/tag/1.0",target:"_blank",rel:"noopener noreferrer"},j=n("td",null,"前端发布页",-1),D=t(`<h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> Install</h2><h3 id="前置软件" tabindex="-1"><a class="header-anchor" href="#前置软件" aria-hidden="true">#</a> 前置软件</h3><table><thead><tr><th>软件</th><th>版本</th><th>说明</th></tr></thead><tbody><tr><td>Ubuntu</td><td>22.04LTS</td><td>操作系统[可选]</td></tr><tr><td>Windows</td><td>Windows11 22000.2057</td><td>操作系统[可选]</td></tr><tr><td>Java</td><td>18</td><td>Java运行环境</td></tr><tr><td>Python</td><td>3.9</td><td>Python解释器</td></tr><tr><td>node</td><td>16.17.1</td><td>JS运行环境</td></tr><tr><td>pnpm</td><td>8.3.1</td><td>包管理工具</td></tr><tr><td>Nacos</td><td>1.4.1</td><td>微服务注册中心</td></tr><tr><td>Maven</td><td>3.9.2</td><td>项目管理工具</td></tr></tbody></table><h3 id="部署数据库" tabindex="-1"><a class="header-anchor" href="#部署数据库" aria-hidden="true">#</a> 部署数据库</h3><p>在默认的生产环境配置中，使用的数据库端口为9980，默认用户名为root，默认密码为123456。</p><p>你可以选择使用docker来快速启动数据库。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull mysql
<span class="token function">docker</span> run <span class="token parameter variable">-itd</span> <span class="token parameter variable">--name</span> sfx-db <span class="token parameter variable">-p</span> <span class="token number">9980</span>:3306 <span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span><span class="token number">123456</span> mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在创建好数据库之后，运行提供的SQL文件。进行初始化。因为不同的微服务使用不同的数据库，所以你需要创建不同的数据库来进行初始化。</p><table><thead><tr><th>路径</th><th>所属数据库</th><th>说明</th></tr></thead><tbody><tr><td>sfx-analyze/sql/init&amp;data.sql</td><td>sfx_analyze</td><td>财务分析数据库</td></tr><tr><td>sfx-auth/sql/sfx_user.sql</td><td>sfx_user</td><td>权限信息数据库</td></tr><tr><td>sfx-core/sql/sfx_db.sql</td><td>sfx_db</td><td>公司信息数据库</td></tr></tbody></table><h3 id="部署elasticsearch服务器" tabindex="-1"><a class="header-anchor" href="#部署elasticsearch服务器" aria-hidden="true">#</a> 部署ElasticSearch服务器</h3><p>可以直接跳过这一步，使用我们已经提供好的检索服务器。</p>`,11),N={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html",target:"_blank",rel:"noopener noreferrer"},B=n("p",null,[a("在本项目中，请"),n("code",null,"docker pull elasticsearch:8.7.1")],-1),P=n("h3",{id:"部署nacos",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#部署nacos","aria-hidden":"true"},"#"),a(" 部署Nacos")],-1),q={href:"https://github.com/alibaba/nacos/releases/tag/1.4.6",target:"_blank",rel:"noopener noreferrer"},F=n("code",null,"third-party/nacos/bin",-1),T=n("code",null,"startup.sh",-1),X=n("code",null,"startup.cmd",-1),I=n("code",null,"8848",-1),L=t('<h2 id="compile" tabindex="-1"><a class="header-anchor" href="#compile" aria-hidden="true">#</a> Compile</h2><p>如果选择<a href="#%E9%80%89%E9%A1%B92-%E4%B8%8B%E8%BD%BD%E7%BC%96%E8%AF%91%E6%96%87%E4%BB%B6">下载编译好的文件</a>，你可以直接跳过这一步。</p><h3 id="前端" tabindex="-1"><a class="header-anchor" href="#前端" aria-hidden="true">#</a> 前端</h3><p>首先需要<code>/src/main.js</code>中的<code>app.config.globalProperties.$target</code>修改为自己部署的后端网关地址,如图所示</p><p><img src="'+r+`" alt="image-20230703170241025"></p><p>在文件根目录下，运行指令<code>pnpm install</code></p><p>在开发模式下，使用<code>pnpm dev</code>，即可以在本地运行前端服务器进行预览。或使用<code>pnpm build</code>进行构建操作，获得<code>dist</code> 文件夹。</p><p><em>详情见项目中的README</em></p><h3 id="后端" tabindex="-1"><a class="header-anchor" href="#后端" aria-hidden="true">#</a> 后端</h3><p>使用Maven中的<code>package -f pom.xml</code>将项目打包，生成jar文件，如果你选择直接在开发环境运行，也可以跳过这一步。请保证您的Maven可以连接到中央仓库以获取依赖包。</p><p>对于启动预测分析服务器，你需要使用<code>pip install</code>为你的python安装以下库：</p><blockquote><p>pandas</p><p>scikit-learn</p><p>statistics</p><p>statsmodels</p><p>requests</p><p>flask</p><p>nacos-sdk-python</p></blockquote><h2 id="run" tabindex="-1"><a class="header-anchor" href="#run" aria-hidden="true">#</a> Run</h2><h3 id="后端部署" tabindex="-1"><a class="header-anchor" href="#后端部署" aria-hidden="true">#</a> 后端部署</h3><h4 id="step-1" tabindex="-1"><a class="header-anchor" href="#step-1" aria-hidden="true">#</a> Step 1</h4><ul><li>选项1：直接运行</li></ul><p>通过直接运行项目源码下各文件夹中的<code>/src/main/**/*Service.java</code> ，作为Spring Boot的启动类启动服务。</p><ul><li>选项2：通过Jar包运行</li></ul><p>通过在之前提到过的<a href="#%E5%90%8E%E7%AB%AF">生成jar包</a>后，使用java -jar进行启动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">nohup</span> <span class="token function">java</span> <span class="token parameter variable">-jar</span> <span class="token parameter variable">-Xmx512m</span>  <span class="token parameter variable">-Dspring.profiles.active</span><span class="token operator">=</span>prod sfx-analyze-1.0.2.jar <span class="token operator">&gt;</span> logs/analyze.log <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span>
<span class="token function">nohup</span> <span class="token function">java</span> <span class="token parameter variable">-jar</span> <span class="token parameter variable">-Xmx512m</span>  <span class="token parameter variable">-Dspring.profiles.active</span><span class="token operator">=</span>prod sfx-core-1.0.2.jar <span class="token operator">&gt;</span> logs/core.log <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span>
<span class="token function">nohup</span> <span class="token function">java</span> <span class="token parameter variable">-jar</span> <span class="token parameter variable">-Xmx512m</span>  <span class="token parameter variable">-Dspring.profiles.active</span><span class="token operator">=</span>prod sfx-search-1.0.1.jar <span class="token operator">&gt;</span> logs/search.log <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span>
<span class="token function">nohup</span> <span class="token function">java</span> <span class="token parameter variable">-jar</span> <span class="token parameter variable">-Xmx512m</span>  <span class="token parameter variable">-Dspring.profiles.active</span><span class="token operator">=</span>prod sfx-gateway-1.0.jar <span class="token operator">&gt;</span> logs/gateway.log <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一个运行的示例如上。你可以指定运行时所用的配置文件，以及生成日志文件的路径以检查是否运行成功。</p><p>如果你修改了数据库配置，使用JVM选项进行启动修改</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>spring
	datasource
		<span class="token key atrule">url</span><span class="token punctuation">:</span>
    	<span class="token key atrule">password</span><span class="token punctuation">:</span>
    	<span class="token key atrule">user</span><span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于在多台服务器上部署的情况，你需要修改Nacos服务器的地址为公网地址，并修改自身服务器的发现地址为该服务器的公网IP。 （不过我不推荐这样做）</p><p>一个示例是：</p><p>比如Nacos部署在服务器A上，搜索服务器部署在服务器B上。</p><p>你需要在启动时(使用<code>-D</code>参数)进行如下修改：</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">spring.cloud.nacos.server-addr</span><span class="token punctuation">=</span><span class="token value attr-value">A:port</span>
<span class="token key attr-name">spring.cloud.nacos.discovery.ip</span><span class="token punctuation">=</span><span class="token value attr-value">B.ip</span>
<span class="token key attr-name">spring.cloud.nacos.discovery.port</span><span class="token punctuation">=</span><span class="token value attr-value">B.port</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>否则其他微服务无法调用该服务，因为在本项目中，网关转发操作依赖负载均衡，所以用户也无法进行访问。</p><h4 id="step-2" tabindex="-1"><a class="header-anchor" href="#step-2" aria-hidden="true">#</a> Step 2</h4><p>使用Python启动股价，分析及预测服务器。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python3 sfx-stock/StockApplication.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>一个启动示例是：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">nohup</span> python3 flask/StockApplication.py <span class="token operator">&gt;</span> logs/stock.log <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="step-3" tabindex="-1"><a class="header-anchor" href="#step-3" aria-hidden="true">#</a> Step 3</h4><p>检查服务是否上线。</p><p>访问Nacos的端口,应该可以看到所有服务成功上线，如下图所示。</p><p><img src="`+c+`" alt="image-20230703175219446"></p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>你还可以通过更改<code>-Dserver.port=</code>选项，启动更多的服务实例</p></div><h3 id="前端部署" tabindex="-1"><a class="header-anchor" href="#前端部署" aria-hidden="true">#</a> 前端部署</h3><p>正如之前所说，你可以直接使用<code>pnpm dev</code>,在本地进行预览。不过为了部署在服务器上，你需要将<a href="#%E5%89%8D%E7%AB%AF">编译好的</a><code>dist</code>文件夹部署在服务器上。</p><p>一个在<code>demo.sfx.antio2.cn</code>的Nginx部署示例配置是</p><div class="language-nginx line-numbers-mode" data-ext="nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">server</span></span>
<span class="token punctuation">{</span>
    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">80</span></span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">server_name</span> demo.sfx.antio2.cn</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">index</span> index.php index.html index.htm default.php default.htm default.html</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">root</span> /www/wwwroot/demo.sfx.antio2.cn</span><span class="token punctuation">;</span>

    <span class="token comment">#SSL-START SSL相关配置，请勿删除或修改下一行带注释的404规则</span>
    <span class="token comment">#error_page 404/404.html;</span>
    <span class="token comment">#SSL-END</span>

    <span class="token comment">#ERROR-PAGE-START  错误页配置，可以注释、删除或修改</span>
    <span class="token comment">#error_page 404 /404.html;</span>
    <span class="token comment">#error_page 502 /502.html;</span>
    <span class="token comment">#ERROR-PAGE-END</span>

    <span class="token comment">#PHP-INFO-START  PHP引用配置，可以注释或修改</span>
    <span class="token directive"><span class="token keyword">include</span> enable-php-00.conf</span><span class="token punctuation">;</span>
    <span class="token comment">#PHP-INFO-END</span>

    <span class="token comment">#REWRITE-START URL重写规则引用,修改后将导致面板设置的伪静态规则失效</span>
    <span class="token directive"><span class="token keyword">include</span> /www/server/panel/vhost/rewrite/demo.sfx.antio2.cn.conf</span><span class="token punctuation">;</span>
    <span class="token comment">#REWRITE-END</span>

    <span class="token comment">#禁止访问的文件或目录</span>
    <span class="token directive"><span class="token keyword">location</span> ~ ^/(\\.user.ini|\\.htaccess|\\.git|\\.env|\\.svn|\\.project|LICENSE|README.md)</span>
    <span class="token punctuation">{</span>
        <span class="token directive"><span class="token keyword">return</span> <span class="token number">404</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">#一键申请SSL证书验证目录相关设置</span>
    <span class="token directive"><span class="token keyword">location</span> ~ \\.well-known</span><span class="token punctuation">{</span>
        <span class="token directive"><span class="token keyword">allow</span> all</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">#禁止在证书验证目录放入敏感文件</span>
    <span class="token directive"><span class="token keyword">if</span> ( <span class="token variable">$uri</span> ~ <span class="token string">&quot;^/\\.well-known/.*\\.(php|jsp|py|js|css|lua|ts|go|zip|tar\\.gz|rar|7z|sql|bak)$&quot;</span> )</span> <span class="token punctuation">{</span>
        <span class="token directive"><span class="token keyword">return</span> <span class="token number">403</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token directive"><span class="token keyword">location</span> ~ .*\\.(gif|jpg|jpeg|png|bmp|swf)$</span>
    <span class="token punctuation">{</span>
        <span class="token directive"><span class="token keyword">expires</span>      <span class="token number">30d</span></span><span class="token punctuation">;</span>
        <span class="token directive"><span class="token keyword">error_log</span> /dev/null</span><span class="token punctuation">;</span>
        <span class="token directive"><span class="token keyword">access_log</span> /dev/null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token directive"><span class="token keyword">location</span> ~ .*\\.(js|css)?$</span>
    <span class="token punctuation">{</span>
        <span class="token directive"><span class="token keyword">expires</span>      <span class="token number">12h</span></span><span class="token punctuation">;</span>
        <span class="token directive"><span class="token keyword">error_log</span> /dev/null</span><span class="token punctuation">;</span>
        <span class="token directive"><span class="token keyword">access_log</span> /dev/null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token directive"><span class="token keyword">access_log</span>  /www/wwwlogs/demo.sfx.antio2.cn.log</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">error_log</span>  /www/wwwlogs/demo.sfx.antio2.cn.error.log</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="additional" tabindex="-1"><a class="header-anchor" href="#additional" aria-hidden="true">#</a> Additional</h2><h3 id="跨域" tabindex="-1"><a class="header-anchor" href="#跨域" aria-hidden="true">#</a> 跨域</h3><p>为了解决跨域问题，你可以选择：</p><ul><li>安装跨域插件</li></ul>`,47),M={href:"https://webextension.org/listing/access-control.html",target:"_blank",rel:"noopener noreferrer"},O=t(`<ul><li><p>将API平台和前端部署在同一源。</p><ul><li><p>首先，将<a href="#%E5%89%8D%E7%AB%AF">网关地址</a>后缀加上<code>/api</code>,例如<code>http://host/api</code></p></li><li><p>在网关服务器所属主机上，部署Nginx服务器，进行动静请求分离。</p><div class="language-nginx line-numbers-mode" data-ext="nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">location</span> /api</span> <span class="token punctuation">{</span>
    <span class="token directive"><span class="token keyword">rewrite</span> ^/api(.*)$ <span class="token variable">$1</span> break</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">proxy_pass</span> http://localhost:9000</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h3 id="上云" tabindex="-1"><a class="header-anchor" href="#上云" aria-hidden="true">#</a> 上云</h3><p>请使用至少2核4g的服务器</p><p>在防火墙配置中，打开网关expose的端口。</p><p>若在多个服务器上配置，请在对应服务器上打开该微服务对应端口。</p>`,5);function z($,G){const s=l("ExternalLinkIcon");return p(),o("div",null,[u,n("p",null,[a("访问"),n("a",h,[a("SmartFinanceX 部署指南(antio2.cn)"),e(s)]),a("以在线阅读本文")]),v,m,n("table",null,[k,n("tbody",null,[n("tr",null,[n("td",null,[n("a",b,[a("SmartFinanceX/sfx-backend(github.com)"),e(s)])]),g]),n("tr",null,[n("td",null,[n("a",f,[a("SmartFinanceX/sfx-frontend(github.com)"),e(s)])]),_])])]),x,w,y,n("table",null,[E,n("tbody",null,[n("tr",null,[n("td",null,[n("a",S,[a("Releases · SmartFinanceX/sfx-backend (github.com)"),e(s)])]),R]),n("tr",null,[n("td",null,[n("a",A,[a("Release Version 1.0 · SmartFinanceX/sfx-frontend (github.com)"),e(s)])]),j])])]),D,n("p",null,[a("或者通过Docker进行部署。请参照[Install Elasticsearch with Docker | Elasticsearch Guide "),n("a",N,[a("8.8] | Elastic"),e(s)])]),B,P,n("p",null,[a("可以选择在Github上获取"),n("a",q,[a("Release 1.4.6 (Mar 25th, 2023) · alibaba/nacos (github.com)"),e(s)]),a(" 或者直接使用本项目中"),F,a("下的启动脚本"),T,a("或者"),X,a("进行Nacos启动。默认配置端口为"),I,a("。")]),L,n("p",null,[n("a",M,[a("Access Control-Allow-Origin - Unblock :: WebExtension.ORG"),e(s)])]),O])}const W=i(d,[["render",z],["__file","index.html.vue"]]);export{W as default};
